<b> Taskloop </b> 
<br>
The taskloop construct specifies that the iterations of one or more associated loops will be<br>
executed in parallel using explicit tasks. <br>

 The iterations are distributed across tasks generated by the construct and scheduled to be executed
<br>
<br>
#pragma omp taskloop [clause[[,] clause] ...] new-line <br>
 for-loops<br><br>
 
The basic clauses that can be used are:
<ul>
<li>if([ taskloop :] scalar-expression)                   </li>
<li>shared(list)                                          </li>
<li>private(list)                                         </li>
<li>firstprivate(list)                                    </li>
<li>lastprivate(list)                                     </li>
<li>reduction([default ,]reduction-identifier : list)     </li>
<li>in_reduction(reduction-identifier : list)             </li>
<li>default(shared | none)                                </li>
<li>grainsize(grain-size)                                 </li>
<li>num_tasks(num-tasks)                                  </li>
<li>collapse(n)                                           </li>
<li>final(scalar-expr)                                    </li>
<li>priority(priority-value)                              </li>
<li>untied                                                </li>
<li>mergeable                                             </li>
<li>nogroup                                               </li>
<li>allocate([allocator :] list)                          </li>

</ul>
<br>
<br>
It can be used in the following contexts:
<br>
</br>
<ul>
		<li> #pragma omp taskloop               </li>
		<li> #pragma omp taskloop simd          </li>
		<li> #pragma omp master taskloop        </li>
		<li> #pragma omp master taskloop simd   </li>
		
</ul>


